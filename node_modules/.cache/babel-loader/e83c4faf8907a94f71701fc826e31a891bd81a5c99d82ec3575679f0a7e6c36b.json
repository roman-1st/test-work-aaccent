{"ast":null,"code":"import { ProductsActionTypes } from './../../types/products';\nlet initialState = {\n  getAllProducts: [],\n  brands_filter: [],\n  productWithFilter: [],\n  productWithoutFilter: [],\n  displayProducts: [],\n  filterByBrand: [],\n  startDisplayInd: 0,\n  countDisplayProduct: 6,\n  pageProduct: 1\n};\nexport const productsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ProductsActionTypes.GET_ALL_PRODUCT:\n      return {\n        ...state,\n        getAllProducts: action.payload\n      };\n    case ProductsActionTypes.ADD_BRAND_TO_FILTER:\n      // console.log(action);\n      console.log('add');\n      return {\n        ...state\n        // brands_filter: [...state.brands_filter, action.payload]\n      };\n\n    case ProductsActionTypes.REMOVE_BRAND_FROM_FILTER:\n      console.log('asdasdasd');\n      return {\n        ...state\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\n\n// switch (action.type) {\n//     case ProductsActionTypes.GET_ALL_PRODUCT: {\n//         return {\n//             ...state,\n//             getProducts: [...action.payload],\n//             // productWithoutFilter: [...action.payload],\n//             displayProducts: [...action.payload.splice(state.startDisplayInd, state.countDisplayProduct)],\n//         }\n//     }\n//     case ProductsActionTypes.SET_BRANDS_FILTER:\n//         if (state.filterByBrand.length === 0) { \n//             const newPro: Product[] = state.getProducts.filter(el => el.brand === action.payload)\n//             return {\n//                 ...state,\n//                 filterByBrand: [action.payload],\n//                 // productWithFilter: [...newPro],\n//                 displayProducts: [...newPro],\n//             }\n//         }\n\n//         if (state.filterByBrand.find((el) => el === action.payload)) { \n//             const newBrandsFilter = state.filterByBrand.filter(el => el !== action.payload)\n//             const newPro: Product[] = state.productWithFilter.filter(el => el.brand !== action.payload)\n//             if (newPro.length === 0) {\n//                 return {\n//                     ...state,\n//                     filterByBrand: [],\n//                     productWithFilter: [],\n//                     displayProducts: [...state.productWithoutFilter.splice(state.startDisplayInd, state.countDisplayProduct)]\n//                 }\n//             }\n//             return {\n//                 ...state,\n//                 filterByBrand: [...newBrandsFilter],\n//                 productWithFilter: [...newPro],\n//                 displayProducts: [...newPro.splice(state.startDisplayInd, state.countDisplayProduct)]\n//             }\n//         }\n\n//         if (state.filterByBrand.find((el) => el !== action.payload)) {\n//             const newPro: Product[] = state.getProducts.filter(el => el.brand === action.payload)\n//             const display = [...state.productWithFilter, ...newPro]\n\n//             return {\n//                 ...state,\n//                 filterByBrand: [...state.filterByBrand, action.payload],\n//                 productWithFilter: [...display],\n//                 displayProducts: [...display.splice(state.startDisplayInd, state.countDisplayProduct)]\n//             }\n//         }\n//         return {\n//             ...state,\n//         }\n\n//     case ProductsActionTypes.GO_TO_NEXT_PAGE:\n//         if (state.productWithFilter.length === 0) {\n//             return {\n//                 ...state,\n//                 productWithoutFilter: [...state.productWithoutFilter],\n//                 displayProducts: [...state.productWithoutFilter.splice(state.startDisplayInd + 6, state.countDisplayProduct)],\n//                 startDisplayInd: state.startDisplayInd + 6,\n//                 pageProduct: state.pageProduct + 1,\n//             }\n//         }\n//         if (state.productWithFilter.length > 0) {\n//             return {\n//                 ...state,\n//                 productWithFilter: [...state.productWithFilter],\n//                 displayProducts: [...state.productWithFilter.splice(state.startDisplayInd + 6, state.countDisplayProduct)],\n//                 startDisplayInd: state.startDisplayInd + 6,\n//                 pageProduct: state.pageProduct + 1,\n//             }\n//         }\n//         return { ...state }\n//     case ProductsActionTypes.GO_TO_PREVIOUS_PAGE:\n//         if (state.productWithFilter.length === 0) {\n//             return {\n//                 ...state,\n//                 productWithoutFilter: [...state.productWithoutFilter],\n//                 displayProducts: [...state.productWithoutFilter.splice(state.startDisplayInd - 6, state.countDisplayProduct)],\n//                 startDisplayInd: state.startDisplayInd - 6,\n//                 pageProduct: state.pageProduct - 1\n//             }\n//         }\n//         if (state.productWithFilter.length > 0) {\n//             return {\n//                 ...state,\n//                 productWithFilter: [...state.productWithFilter],\n//                 displayProducts: [...state.productWithFilter.splice(state.startDisplayInd - 6, state.countDisplayProduct)],\n//                 startDisplayInd: state.startDisplayInd - 6,\n//                 pageProduct: state.pageProduct - 1\n//             }\n//         }\n//         return { ...state }","map":{"version":3,"names":["ProductsActionTypes","initialState","getAllProducts","brands_filter","productWithFilter","productWithoutFilter","displayProducts","filterByBrand","startDisplayInd","countDisplayProduct","pageProduct","productsReducer","state","arguments","length","undefined","action","type","GET_ALL_PRODUCT","payload","ADD_BRAND_TO_FILTER","console","log","REMOVE_BRAND_FROM_FILTER"],"sources":["/Users/romansehovcev/Documents/TestsProjects/test-project-accent/src/store/reducer/productsReducer.ts"],"sourcesContent":["import { ProductState, Product, ProductsActions, ProductsActionTypes } from './../../types/products';\n\nlet initialState: ProductState = {\n    getAllProducts: [],\n    brands_filter: [],\n\n    productWithFilter: [],\n    productWithoutFilter: [],\n\n    displayProducts: [],\n\n    filterByBrand: [],\n\n    startDisplayInd: 0,\n    countDisplayProduct: 6,\n    pageProduct: 1,\n}\n\nexport const productsReducer = (state = initialState, action: ProductsActions): ProductState => {\n    switch(action.type) {\n        case ProductsActionTypes.GET_ALL_PRODUCT:\n            return {\n                ...state,\n                getAllProducts: action.payload,\n            }\n        case ProductsActionTypes.ADD_BRAND_TO_FILTER: \n        // console.log(action);\n            console.log('add');\n            \n            return {\n                ...state,\n                // brands_filter: [...state.brands_filter, action.payload]\n            }\n        \n        case ProductsActionTypes.REMOVE_BRAND_FROM_FILTER:\n            console.log('asdasdasd');\n            \n\n            return {\n                ...state,\n            }\n        \n        default:\n            return {\n                ...state,\n            }\n    }\n}\n\n\n// switch (action.type) {\n//     case ProductsActionTypes.GET_ALL_PRODUCT: {\n//         return {\n//             ...state,\n//             getProducts: [...action.payload],\n//             // productWithoutFilter: [...action.payload],\n//             displayProducts: [...action.payload.splice(state.startDisplayInd, state.countDisplayProduct)],\n//         }\n//     }\n//     case ProductsActionTypes.SET_BRANDS_FILTER:\n//         if (state.filterByBrand.length === 0) { \n//             const newPro: Product[] = state.getProducts.filter(el => el.brand === action.payload)\n//             return {\n//                 ...state,\n//                 filterByBrand: [action.payload],\n//                 // productWithFilter: [...newPro],\n//                 displayProducts: [...newPro],\n//             }\n//         }\n\n//         if (state.filterByBrand.find((el) => el === action.payload)) { \n//             const newBrandsFilter = state.filterByBrand.filter(el => el !== action.payload)\n//             const newPro: Product[] = state.productWithFilter.filter(el => el.brand !== action.payload)\n//             if (newPro.length === 0) {\n//                 return {\n//                     ...state,\n//                     filterByBrand: [],\n//                     productWithFilter: [],\n//                     displayProducts: [...state.productWithoutFilter.splice(state.startDisplayInd, state.countDisplayProduct)]\n//                 }\n//             }\n//             return {\n//                 ...state,\n//                 filterByBrand: [...newBrandsFilter],\n//                 productWithFilter: [...newPro],\n//                 displayProducts: [...newPro.splice(state.startDisplayInd, state.countDisplayProduct)]\n//             }\n//         }\n\n//         if (state.filterByBrand.find((el) => el !== action.payload)) {\n//             const newPro: Product[] = state.getProducts.filter(el => el.brand === action.payload)\n//             const display = [...state.productWithFilter, ...newPro]\n\n//             return {\n//                 ...state,\n//                 filterByBrand: [...state.filterByBrand, action.payload],\n//                 productWithFilter: [...display],\n//                 displayProducts: [...display.splice(state.startDisplayInd, state.countDisplayProduct)]\n//             }\n//         }\n//         return {\n//             ...state,\n//         }\n\n//     case ProductsActionTypes.GO_TO_NEXT_PAGE:\n//         if (state.productWithFilter.length === 0) {\n//             return {\n//                 ...state,\n//                 productWithoutFilter: [...state.productWithoutFilter],\n//                 displayProducts: [...state.productWithoutFilter.splice(state.startDisplayInd + 6, state.countDisplayProduct)],\n//                 startDisplayInd: state.startDisplayInd + 6,\n//                 pageProduct: state.pageProduct + 1,\n//             }\n//         }\n//         if (state.productWithFilter.length > 0) {\n//             return {\n//                 ...state,\n//                 productWithFilter: [...state.productWithFilter],\n//                 displayProducts: [...state.productWithFilter.splice(state.startDisplayInd + 6, state.countDisplayProduct)],\n//                 startDisplayInd: state.startDisplayInd + 6,\n//                 pageProduct: state.pageProduct + 1,\n//             }\n//         }\n//         return { ...state }\n//     case ProductsActionTypes.GO_TO_PREVIOUS_PAGE:\n//         if (state.productWithFilter.length === 0) {\n//             return {\n//                 ...state,\n//                 productWithoutFilter: [...state.productWithoutFilter],\n//                 displayProducts: [...state.productWithoutFilter.splice(state.startDisplayInd - 6, state.countDisplayProduct)],\n//                 startDisplayInd: state.startDisplayInd - 6,\n//                 pageProduct: state.pageProduct - 1\n//             }\n//         }\n//         if (state.productWithFilter.length > 0) {\n//             return {\n//                 ...state,\n//                 productWithFilter: [...state.productWithFilter],\n//                 displayProducts: [...state.productWithFilter.splice(state.startDisplayInd - 6, state.countDisplayProduct)],\n//                 startDisplayInd: state.startDisplayInd - 6,\n//                 pageProduct: state.pageProduct - 1\n//             }\n//         }\n//         return { ...state }\n"],"mappings":"AAAA,SAAiDA,mBAAmB,QAAQ,wBAAwB;AAEpG,IAAIC,YAA0B,GAAG;EAC7BC,cAAc,EAAE,EAAE;EAClBC,aAAa,EAAE,EAAE;EAEjBC,iBAAiB,EAAE,EAAE;EACrBC,oBAAoB,EAAE,EAAE;EAExBC,eAAe,EAAE,EAAE;EAEnBC,aAAa,EAAE,EAAE;EAEjBC,eAAe,EAAE,CAAC;EAClBC,mBAAmB,EAAE,CAAC;EACtBC,WAAW,EAAE;AACjB,CAAC;AAED,OAAO,MAAMC,eAAe,GAAG,SAAAA,CAAA,EAAiE;EAAA,IAAhEC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGZ,YAAY;EAAA,IAAEe,MAAuB,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACzE,QAAOC,MAAM,CAACC,IAAI;IACd,KAAKjB,mBAAmB,CAACkB,eAAe;MACpC,OAAO;QACH,GAAGN,KAAK;QACRV,cAAc,EAAEc,MAAM,CAACG;MAC3B,CAAC;IACL,KAAKnB,mBAAmB,CAACoB,mBAAmB;MAC5C;MACIC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;MAElB,OAAO;QACH,GAAGV;QACH;MACJ,CAAC;;IAEL,KAAKZ,mBAAmB,CAACuB,wBAAwB;MAC7CF,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;MAGxB,OAAO;QACH,GAAGV;MACP,CAAC;IAEL;MACI,OAAO;QACH,GAAGA;MACP,CAAC;EAAA;AAEb,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}