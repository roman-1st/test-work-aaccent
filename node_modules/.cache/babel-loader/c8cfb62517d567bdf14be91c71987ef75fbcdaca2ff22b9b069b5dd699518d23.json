{"ast":null,"code":"import { ProductsActionTypes } from './../../types/products';\nlet initialState = {\n  getProducts: [],\n  productWithFilter: [],\n  productWithoutFilter: [],\n  displayProducts: [],\n  filterByBrand: [],\n  startDisplayInd: 0,\n  countDisplayProduct: 6,\n  pageProduct: 1\n};\nexport const productsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ProductsActionTypes.GET_ALL_PRODUCT:\n      {\n        return {\n          ...state,\n          getProducts: [...action.payload],\n          productWithoutFilter: [...action.payload],\n          displayProducts: [...action.payload.splice(state.startDisplayInd, state.countDisplayProduct)]\n        };\n      }\n    case ProductsActionTypes.SET_BRANDS_FILTER:\n      const newProductList = [];\n      if (state.filterByBrand.length === 0) {\n        const newPro = state.getProducts.filter(el => el.brand === action.payload);\n        return {\n          ...state,\n          filterByBrand: [action.payload],\n          productWithFilter: [...newPro]\n        };\n      }\n      if (state.filterByBrand.find(el => el === action.payload)) {\n        // проверка на наличие этого бренда\n        const newBrandsFilter = state.filterByBrand.filter(el => el !== action.payload);\n        const newPro = state.productWithFilter.filter(el => el.brand !== action.payload);\n        return {\n          ...state,\n          filterByBrand: [...newBrandsFilter],\n          productWithFilter: [...newPro]\n        };\n      }\n      if (state.filterByBrand.find(el => el !== action.payload)) {\n        const newPro = state.productWithFilter.filter(el => el.brand === action.payload);\n        return {\n          ...state,\n          filterByBrand: [...state.filterByBrand, action.payload],\n          productWithFilter: [...state.productWithFilter]\n        };\n      }\n      return {\n        // добавление последующих брендов\n        ...state\n      };\n    case ProductsActionTypes.GO_TO_NEXT_PAGE:\n      return {\n        ...state,\n        getProducts: [...state.getProducts],\n        displayProducts: [...state.getProducts.splice(state.startDisplayInd + 6, state.countDisplayProduct)],\n        startDisplayInd: state.startDisplayInd + 6,\n        pageProduct: state.pageProduct + 1\n      };\n    case ProductsActionTypes.GO_TO_PREVIOUS_PAGE:\n      return {\n        ...state,\n        getProducts: [...state.getProducts],\n        displayProducts: [...state.getProducts.splice(state.startDisplayInd - 6, state.countDisplayProduct)],\n        startDisplayInd: state.startDisplayInd - 6,\n        pageProduct: state.pageProduct - 1\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};","map":{"version":3,"names":["ProductsActionTypes","initialState","getProducts","productWithFilter","productWithoutFilter","displayProducts","filterByBrand","startDisplayInd","countDisplayProduct","pageProduct","productsReducer","state","arguments","length","undefined","action","type","GET_ALL_PRODUCT","payload","splice","SET_BRANDS_FILTER","newProductList","newPro","filter","el","brand","find","newBrandsFilter","GO_TO_NEXT_PAGE","GO_TO_PREVIOUS_PAGE"],"sources":["/Users/romansehovcev/Documents/TestsProjects/test-project-accent/src/store/reducer/productsReducer.ts"],"sourcesContent":["import { ProductState, Product, ProductsActions, ProductsActionTypes } from './../../types/products';\n\nlet initialState: ProductState = {\n    getProducts: [],\n\n    productWithFilter: [],\n    productWithoutFilter: [],\n\n    displayProducts: [],\n\n    filterByBrand: [],\n\n    startDisplayInd: 0,\n    countDisplayProduct: 6,\n    pageProduct: 1,\n}\n\nexport const productsReducer = (state = initialState, action: ProductsActions ):ProductState => {\n    switch(action.type) {\n        case ProductsActionTypes.GET_ALL_PRODUCT: {\n            return {\n                ...state,\n                getProducts: [...action.payload],\n                productWithoutFilter: [...action.payload],\n                displayProducts: [ ...action.payload.splice(state.startDisplayInd, state.countDisplayProduct)],\n            }\n        }\n\n\n        case ProductsActionTypes.SET_BRANDS_FILTER:\n            const newProductList: Product[] = []\n\n            if (state.filterByBrand.length === 0) {\n                const newPro: Product[] = state.getProducts.filter( el => el.brand === action.payload )\n                return {\n                    ...state,\n                    filterByBrand: [action.payload],\n                    productWithFilter: [...newPro]\n                }\n            }\n\n            if (state.filterByBrand.find ( (el) => el === action.payload )) {           // проверка на наличие этого бренда\n                const newBrandsFilter = state.filterByBrand.filter( el => el !== action.payload)\n                const newPro: Product[] = state.productWithFilter.filter (el => el.brand !==action.payload)\n                return {\n                    ...state,\n                    filterByBrand: [...newBrandsFilter],\n                    productWithFilter: [...newPro],\n                }\n            } \n\n            if(state.filterByBrand.find ( (el) => el !== action.payload )) {\n                const newPro: Product[] = state.productWithFilter.filter (el => el.brand ===action.payload)\n                return {\n                    ...state, \n                    filterByBrand: [...state.filterByBrand, action.payload],\n                    productWithFilter: [...state.productWithFilter],\n                }\n            }\n\n            return {                                                                    // добавление последующих брендов\n                ...state, \n            }\n        case ProductsActionTypes.GO_TO_NEXT_PAGE: \n            return {\n                ...state,\n                getProducts: [...state.getProducts],\n                displayProducts: [...state.getProducts.splice(state.startDisplayInd + 6, state.countDisplayProduct)],\n                startDisplayInd: state.startDisplayInd + 6,\n                pageProduct: state.pageProduct + 1\n            }\n        case ProductsActionTypes.GO_TO_PREVIOUS_PAGE:\n            return {\n                ...state,\n                getProducts: [...state.getProducts],\n                displayProducts: [...state.getProducts.splice(state.startDisplayInd -6, state.countDisplayProduct)],\n                startDisplayInd: state.startDisplayInd -6,\n                pageProduct: state.pageProduct - 1\n            }\n\n        default: \n            return {\n                ...state,\n            }\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}