{"ast":null,"code":"var _jsxFileName = \"/Users/romansehovcev/Documents/TestsProjects/test-project-accent/src/components/CheckoutOrder/ModalPage/ModalPage.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState }  from \"react\"; \n// import { useTypedSelector } from \"../../../hooks/useTypedSelector\";\n// import './ModalPage.css'\n\n// const ModalPage = () => {\n//     const [show, setShow] = useState(false);\n//     const {orderResult} = useTypedSelector (state => state.order)\n//     console.log(orderResult);\n//     // Функция для открытия модального окна\n//     const handleOpen = () => {\n//       setShow(true);\n//     }\n\n//     // Функция для закрытия модального окна\n//     const handleClose = () => {\n//       setShow(false);\n//     }\n\n//     if (orderResult !== null) {\n//         setShow(true);\n//     }\n\n//     return (\n//       <div \n// >\n//         {/* Кнопка для открытия модального окна */}\n//         <button onClick={handleOpen}>{}</button>\n\n//         {/* Модальное окно */}\n//         {show && (\n//           <div className=\"modal\">\n//             <div className=\"modal-content\">\n//               <span className=\"close\" onClick={handleClose}>&times;</span>\n//               <p>adsdsadsa</p>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     );\n// }\n\n// export default ModalPage\n\nimport React, { useState, useEffect } from \"react\";\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\nimport './ModalPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalPage = () => {\n  _s();\n  const [show, setShow] = useState(false);\n  const {\n    orderResult\n  } = useTypedSelector(state => state.order);\n  useEffect(() => {\n    if (orderResult !== null) {\n      setShow(true);\n    }\n  }, [orderResult]);\n\n  // Функция для открытия модального окна\n  const handleOpen = () => {\n    setShow(true);\n  };\n\n  // Функция для закрытия модального окна\n  const handleClose = () => {\n    setShow(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOpen,\n      children: \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C \\u043C\\u043E\\u0434\\u0430\\u043B\\u044C\\u043D\\u043E\\u0435 \\u043E\\u043A\\u043D\\u043E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          onClick: handleClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0421\\u043E\\u0434\\u0435\\u0440\\u0436\\u0438\\u043C\\u043E\\u0435 \\u043C\\u043E\\u0434\\u0430\\u043B\\u044C\\u043D\\u043E\\u0433\\u043E \\u043E\\u043A\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 7\n  }, this);\n};\n_s(ModalPage, \"AeGrf5JJi0e+IBf1J01za4FTpp8=\", false, function () {\n  return [useTypedSelector];\n});\n_c = ModalPage;\nexport default ModalPage;\nvar _c;\n$RefreshReg$(_c, \"ModalPage\");","map":{"version":3,"names":["React","useState","useEffect","useTypedSelector","jsxDEV","_jsxDEV","ModalPage","_s","show","setShow","orderResult","state","order","handleOpen","handleClose","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/romansehovcev/Documents/TestsProjects/test-project-accent/src/components/CheckoutOrder/ModalPage/ModalPage.tsx"],"sourcesContent":["// import React, { useState }  from \"react\"; \n// import { useTypedSelector } from \"../../../hooks/useTypedSelector\";\n// import './ModalPage.css'\n\n// const ModalPage = () => {\n//     const [show, setShow] = useState(false);\n//     const {orderResult} = useTypedSelector (state => state.order)\n//     console.log(orderResult);\n//     // Функция для открытия модального окна\n//     const handleOpen = () => {\n//       setShow(true);\n//     }\n  \n//     // Функция для закрытия модального окна\n//     const handleClose = () => {\n//       setShow(false);\n//     }\n\n//     if (orderResult !== null) {\n//         setShow(true);\n//     }\n\n//     return (\n//       <div \n// >\n//         {/* Кнопка для открытия модального окна */}\n//         <button onClick={handleOpen}>{}</button>\n  \n//         {/* Модальное окно */}\n//         {show && (\n//           <div className=\"modal\">\n//             <div className=\"modal-content\">\n//               <span className=\"close\" onClick={handleClose}>&times;</span>\n//               <p>adsdsadsa</p>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     );\n// }\n\n// export default ModalPage\n\nimport React, { useState, useEffect } from \"react\"; \nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\nimport './ModalPage.css'\n\nconst ModalPage = () => {\n    const [show, setShow] = useState(false);\n    const {orderResult} = useTypedSelector (state => state.order)\n\n    useEffect(() => {\n        if (orderResult !== null) {\n            setShow(true);\n        }\n    }, [orderResult]);\n\n    // Функция для открытия модального окна\n    const handleOpen = () => {\n      setShow(true);\n    }\n  \n    // Функция для закрытия модального окна\n    const handleClose = () => {\n      setShow(false);\n    }\n\n    return (\n      <div>\n        {/* Кнопка для открытия модального окна */}\n        <button onClick={handleOpen}>Открыть модальное окно</button>\n  \n        {/* Модальное окно */}\n        {show && (\n          <div className=\"modal\">\n            <div className=\"modal-content\">\n              <span className=\"close\" onClick={handleClose}>&times;</span>\n              <p>Содержимое модального окна</p>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n}\n\nexport default ModalPage;"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,gBAAgB,QAAQ,iCAAiC;AAClE,OAAO,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM;IAACS;EAAW,CAAC,GAAGP,gBAAgB,CAAEQ,KAAK,IAAIA,KAAK,CAACC,KAAK,CAAC;EAE7DV,SAAS,CAAC,MAAM;IACZ,IAAIQ,WAAW,KAAK,IAAI,EAAE;MACtBD,OAAO,CAAC,IAAI,CAAC;IACjB;EACJ,CAAC,EAAE,CAACC,WAAW,CAAC,CAAC;;EAEjB;EACA,MAAMG,UAAU,GAAGA,CAAA,KAAM;IACvBJ,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;;EAED;EACA,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACxBL,OAAO,CAAC,KAAK,CAAC;EAChB,CAAC;EAED,oBACEJ,OAAA;IAAAU,QAAA,gBAEEV,OAAA;MAAQW,OAAO,EAAEH,UAAW;MAAAE,QAAA,EAAC;IAAsB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,EAG3DZ,IAAI,iBACHH,OAAA;MAAKgB,SAAS,EAAC,OAAO;MAAAN,QAAA,eACpBV,OAAA;QAAKgB,SAAS,EAAC,eAAe;QAAAN,QAAA,gBAC5BV,OAAA;UAAMgB,SAAS,EAAC,OAAO;UAACL,OAAO,EAAEF,WAAY;UAAAC,QAAA,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,eAC5Df,OAAA;UAAAU,QAAA,EAAG;QAA0B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAC7B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAET;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEZ,CAAC;AAAAb,EAAA,CApCKD,SAAS;EAAA,QAEWH,gBAAgB;AAAA;AAAAmB,EAAA,GAFpChB,SAAS;AAsCf,eAAeA,SAAS;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}