{"ast":null,"code":"import { ProductsActionTypes } from './../../types/products';\nlet initialState = {\n  allProducts: [],\n  displayProducts: [],\n  filterByBrand: [],\n  startDispayInd: 0\n};\nexport const productsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ProductsActionTypes.GET_ALL_PRODUCT:\n      {\n        return {\n          ...state,\n          allProducts: action.payload,\n          displayProducts: action.payload.splice(0, 6)\n        };\n      }\n    case ProductsActionTypes.SET_BRANDS_FILTER:\n      if (state.filterByBrand.length === 0) return {\n        //добавление певого бренда\n        ...state,\n        filterByBrand: [action.payload]\n      };\n      if (state.filterByBrand.find(el => el === action.payload)) {\n        // проверка на наличие этого бренда\n        const newBrandsFilter = state.filterByBrand.filter(el => el !== action.payload);\n        return {\n          ...state,\n          filterByBrand: [...newBrandsFilter]\n        };\n      }\n      return {\n        // добавление последующих брендов\n        ...state,\n        filterByBrand: [...state.filterByBrand, action.payload]\n      };\n    case ProductsActionTypes.VIEW_PRODUCTS:\n      return {\n        ...state,\n        displayProducts: [...state.allProducts.splice(0, action.payload)]\n      };\n    case ProductsActionTypes.GO_TO_NEXT_PAGE:\n      let nextPage;\n      return {\n        ...state\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};","map":{"version":3,"names":["ProductsActionTypes","initialState","allProducts","displayProducts","filterByBrand","startDispayInd","productsReducer","state","arguments","length","undefined","action","type","GET_ALL_PRODUCT","payload","splice","SET_BRANDS_FILTER","find","el","newBrandsFilter","filter","VIEW_PRODUCTS","GO_TO_NEXT_PAGE","nextPage"],"sources":["/Users/romansehovcev/Documents/TestsProjects/test-project-accent/src/store/reducer/productsReducer.ts"],"sourcesContent":["import { ProductState, ProductsActions, ProductsActionTypes } from './../../types/products';\n\nlet initialState: ProductState = {\n    allProducts: [],\n    displayProducts: [],\n    filterByBrand: [],\n\n    startDispayInd: 0,\n    \n}\n\nexport const productsReducer = (state = initialState, action: ProductsActions ):ProductState => {\n    switch(action.type) {\n        case ProductsActionTypes.GET_ALL_PRODUCT: {\n            return {\n                ...state,\n                allProducts: action.payload,\n                displayProducts: action.payload.splice(0, 6),\n            }\n        }\n        case ProductsActionTypes.SET_BRANDS_FILTER:\n            if (state.filterByBrand.length === 0) return {                   //добавление певого бренда\n                ...state,\n                filterByBrand: [ action.payload]\n            }\n            if (state.filterByBrand.find ( (el) => el === action.payload )) {    // проверка на наличие этого бренда\n                const newBrandsFilter = state.filterByBrand.filter( el => el !== action.payload)\n                return {\n                    ...state,\n                    filterByBrand: [...newBrandsFilter]\n                }\n            } \n            return {                                                            // добавление последующих брендов\n                ...state, \n                filterByBrand: [...state.filterByBrand, action.payload]\n            }\n        case ProductsActionTypes.VIEW_PRODUCTS: \n            return {\n                ...state,\n                displayProducts:[...state.allProducts.splice(0, action.payload)]\n            }\n\n        case ProductsActionTypes.GO_TO_NEXT_PAGE: \n\n            let nextPage\n\n            return {\n                ...state,\n            }\n\n        default: \n            return {\n                ...state,\n            }\n    }\n}"],"mappings":"AAAA,SAAwCA,mBAAmB,QAAQ,wBAAwB;AAE3F,IAAIC,YAA0B,GAAG;EAC7BC,WAAW,EAAE,EAAE;EACfC,eAAe,EAAE,EAAE;EACnBC,aAAa,EAAE,EAAE;EAEjBC,cAAc,EAAE;AAEpB,CAAC;AAED,OAAO,MAAMC,eAAe,GAAG,SAAAA,CAAA,EAAiE;EAAA,IAAhEC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGP,YAAY;EAAA,IAAEU,MAAuB,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACzE,QAAOC,MAAM,CAACC,IAAI;IACd,KAAKZ,mBAAmB,CAACa,eAAe;MAAE;QACtC,OAAO;UACH,GAAGN,KAAK;UACRL,WAAW,EAAES,MAAM,CAACG,OAAO;UAC3BX,eAAe,EAAEQ,MAAM,CAACG,OAAO,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC;QAC/C,CAAC;MACL;IACA,KAAKf,mBAAmB,CAACgB,iBAAiB;MACtC,IAAIT,KAAK,CAACH,aAAa,CAACK,MAAM,KAAK,CAAC,EAAE,OAAO;QAAoB;QAC7D,GAAGF,KAAK;QACRH,aAAa,EAAE,CAAEO,MAAM,CAACG,OAAO;MACnC,CAAC;MACD,IAAIP,KAAK,CAACH,aAAa,CAACa,IAAI,CAAIC,EAAE,IAAKA,EAAE,KAAKP,MAAM,CAACG,OAAO,CAAE,EAAE;QAAK;QACjE,MAAMK,eAAe,GAAGZ,KAAK,CAACH,aAAa,CAACgB,MAAM,CAAEF,EAAE,IAAIA,EAAE,KAAKP,MAAM,CAACG,OAAO,CAAC;QAChF,OAAO;UACH,GAAGP,KAAK;UACRH,aAAa,EAAE,CAAC,GAAGe,eAAe;QACtC,CAAC;MACL;MACA,OAAO;QAA6D;QAChE,GAAGZ,KAAK;QACRH,aAAa,EAAE,CAAC,GAAGG,KAAK,CAACH,aAAa,EAAEO,MAAM,CAACG,OAAO;MAC1D,CAAC;IACL,KAAKd,mBAAmB,CAACqB,aAAa;MAClC,OAAO;QACH,GAAGd,KAAK;QACRJ,eAAe,EAAC,CAAC,GAAGI,KAAK,CAACL,WAAW,CAACa,MAAM,CAAC,CAAC,EAAEJ,MAAM,CAACG,OAAO,CAAC;MACnE,CAAC;IAEL,KAAKd,mBAAmB,CAACsB,eAAe;MAEpC,IAAIC,QAAQ;MAEZ,OAAO;QACH,GAAGhB;MACP,CAAC;IAEL;MACI,OAAO;QACH,GAAGA;MACP,CAAC;EAAA;AAEb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}