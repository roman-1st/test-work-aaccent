{"ast":null,"code":"import { OrderActionTypes } from './../../types/order';\nconst initialState = {\n  orderItem: [],\n  orderPrice: 0,\n  orderCurrency: \"USD\"\n};\nexport const orderReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case OrderActionTypes.ADD_TO_ORDER:\n      const item = action.payload;\n      console.log(action.payload);\n      return {\n        ...state,\n        orderItem: [...state.orderItem, action.payload],\n        orderPrice: state.orderPrice + item.regular_price.value\n      };\n    case OrderActionTypes.REMOVE_FROM_ORDER:\n      return {\n        ...state,\n        orderItem: state.orderItem.filter(item => item.id !== action.payload),\n        orderPrice: state.orderItem.filter(item => item.id !== action.payload).map()\n      };\n    case OrderActionTypes.DECREASE_ORDER_ITEM:\n      const removePrice = action.payload.regular_price.value;\n      const deletedItem = state.orderItem.findIndex(el => el.id === action.payload.id);\n      const newOrderItem = state.orderItem.slice(0, deletedItem).concat(state.orderItem.slice(deletedItem + 1));\n      return {\n        ...state,\n        orderItem: [...newOrderItem],\n        orderPrice: state.orderPrice - removePrice\n      };\n    case OrderActionTypes.INCREASE_ORDER_ITEM:\n      const addPrice = action.payload.regular_price.value;\n      return {\n        ...state,\n        orderItem: [...state.orderItem, action.payload],\n        orderPrice: state.orderPrice + addPrice\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};","map":{"version":3,"names":["OrderActionTypes","initialState","orderItem","orderPrice","orderCurrency","orderReducer","state","arguments","length","undefined","action","type","ADD_TO_ORDER","item","payload","console","log","regular_price","value","REMOVE_FROM_ORDER","filter","id","map","DECREASE_ORDER_ITEM","removePrice","deletedItem","findIndex","el","newOrderItem","slice","concat","INCREASE_ORDER_ITEM","addPrice"],"sources":["/Users/romansehovcev/Documents/TestsProjects/test-project-accent/src/store/reducer/orderReducer.ts"],"sourcesContent":["import { OrderState, OrderActionTypes, OrderActions } from './../../types/order';\n\n\nconst initialState: OrderState = {\n    orderItem: [],\n    orderPrice: 0,\n    orderCurrency: \"USD\",\n}\n\nexport const orderReducer = (state = initialState, action: OrderActions): OrderState => {\n    switch(action.type) {\n        case OrderActionTypes.ADD_TO_ORDER: \n        const item:any = action.payload\n        console.log(action.payload);\n\n            return {\n                ...state,\n                orderItem: [...state.orderItem, action.payload],\n                orderPrice: state.orderPrice + item.regular_price.value\n            }\n              case  OrderActionTypes.REMOVE_FROM_ORDER:\n\n                \n \n                return { \n                    ...state, \n                    orderItem: state.orderItem.filter((item) => item.id !== action.payload),\n                    orderPrice: state.orderItem.filter((item) => item.id !== action.payload).map ()\n                };\n              case OrderActionTypes.DECREASE_ORDER_ITEM:\n                const removePrice:any = action.payload.regular_price.value\n                const deletedItem = state.orderItem.findIndex( el => el.id === action.payload.id)\n                const newOrderItem = \n                    state.orderItem.slice(0, deletedItem)\n                        .concat(state.orderItem\n                            .slice(deletedItem + 1));\n                \n     \n                return { \n                    ...state, \n                    orderItem: [...newOrderItem],\n                    orderPrice: state.orderPrice - removePrice\n                };\n\n              case OrderActionTypes.INCREASE_ORDER_ITEM:\n                const addPrice:any = action.payload.regular_price.value\n                return { \n                    ...state, \n                    orderItem: [...state.orderItem, action.payload],\n                    orderPrice: state.orderPrice + addPrice\n                };\n\n        default: \n        return {\n            ...state\n        }\n    }\n}"],"mappings":"AAAA,SAAqBA,gBAAgB,QAAsB,qBAAqB;AAGhF,MAAMC,YAAwB,GAAG;EAC7BC,SAAS,EAAE,EAAE;EACbC,UAAU,EAAE,CAAC;EACbC,aAAa,EAAE;AACnB,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,SAAAA,CAAA,EAA4D;EAAA,IAA3DC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,YAAY;EAAA,IAAES,MAAoB,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACnE,QAAOC,MAAM,CAACC,IAAI;IACd,KAAKX,gBAAgB,CAACY,YAAY;MAClC,MAAMC,IAAQ,GAAGH,MAAM,CAACI,OAAO;MAC/BC,OAAO,CAACC,GAAG,CAACN,MAAM,CAACI,OAAO,CAAC;MAEvB,OAAO;QACH,GAAGR,KAAK;QACRJ,SAAS,EAAE,CAAC,GAAGI,KAAK,CAACJ,SAAS,EAAEQ,MAAM,CAACI,OAAO,CAAC;QAC/CX,UAAU,EAAEG,KAAK,CAACH,UAAU,GAAGU,IAAI,CAACI,aAAa,CAACC;MACtD,CAAC;IACC,KAAMlB,gBAAgB,CAACmB,iBAAiB;MAItC,OAAO;QACH,GAAGb,KAAK;QACRJ,SAAS,EAAEI,KAAK,CAACJ,SAAS,CAACkB,MAAM,CAAEP,IAAI,IAAKA,IAAI,CAACQ,EAAE,KAAKX,MAAM,CAACI,OAAO,CAAC;QACvEX,UAAU,EAAEG,KAAK,CAACJ,SAAS,CAACkB,MAAM,CAAEP,IAAI,IAAKA,IAAI,CAACQ,EAAE,KAAKX,MAAM,CAACI,OAAO,CAAC,CAACQ,GAAG;MAChF,CAAC;IACH,KAAKtB,gBAAgB,CAACuB,mBAAmB;MACvC,MAAMC,WAAe,GAAGd,MAAM,CAACI,OAAO,CAACG,aAAa,CAACC,KAAK;MAC1D,MAAMO,WAAW,GAAGnB,KAAK,CAACJ,SAAS,CAACwB,SAAS,CAAEC,EAAE,IAAIA,EAAE,CAACN,EAAE,KAAKX,MAAM,CAACI,OAAO,CAACO,EAAE,CAAC;MACjF,MAAMO,YAAY,GACdtB,KAAK,CAACJ,SAAS,CAAC2B,KAAK,CAAC,CAAC,EAAEJ,WAAW,CAAC,CAChCK,MAAM,CAACxB,KAAK,CAACJ,SAAS,CAClB2B,KAAK,CAACJ,WAAW,GAAG,CAAC,CAAC,CAAC;MAGpC,OAAO;QACH,GAAGnB,KAAK;QACRJ,SAAS,EAAE,CAAC,GAAG0B,YAAY,CAAC;QAC5BzB,UAAU,EAAEG,KAAK,CAACH,UAAU,GAAGqB;MACnC,CAAC;IAEH,KAAKxB,gBAAgB,CAAC+B,mBAAmB;MACvC,MAAMC,QAAY,GAAGtB,MAAM,CAACI,OAAO,CAACG,aAAa,CAACC,KAAK;MACvD,OAAO;QACH,GAAGZ,KAAK;QACRJ,SAAS,EAAE,CAAC,GAAGI,KAAK,CAACJ,SAAS,EAAEQ,MAAM,CAACI,OAAO,CAAC;QAC/CX,UAAU,EAAEG,KAAK,CAACH,UAAU,GAAG6B;MACnC,CAAC;IAET;MACA,OAAO;QACH,GAAG1B;MACP,CAAC;EAAA;AAET,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}