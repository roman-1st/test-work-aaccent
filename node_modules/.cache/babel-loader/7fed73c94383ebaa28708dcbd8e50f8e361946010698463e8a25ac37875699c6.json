{"ast":null,"code":"import { ProductsActionTypes } from './../../types/products';\nlet initialState = {\n  products: [],\n  brandsFilter: []\n};\nexport const productsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ProductsActionTypes.GET_ALL_PRODUCT:\n      {\n        return {\n          ...state,\n          products: action.payload\n        };\n      }\n    case ProductsActionTypes.SET_BRANDS_FILTER:\n      if (state.brandsFilter.length === 0) return {\n        //добавление но\n        ...state,\n        brandsFilter: [action.payload]\n      };\n      if (state.brandsFilter.find(el => el === action.payload)) {\n        const newBrandsFilter = state.brandsFilter.filter(el => el !== action.payload);\n        return {\n          ...state,\n          brandsFilter: [...newBrandsFilter]\n        };\n      }\n      return {\n        ...state,\n        brandsFilter: [...state.brandsFilter, action.payload]\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};","map":{"version":3,"names":["ProductsActionTypes","initialState","products","brandsFilter","productsReducer","state","arguments","length","undefined","action","type","GET_ALL_PRODUCT","payload","SET_BRANDS_FILTER","find","el","newBrandsFilter","filter"],"sources":["/Users/romansehovcev/Documents/TestsProjects/test-project-accent/src/store/reducer/productsReducer.ts"],"sourcesContent":["import { ProductState, ProductsActions, ProductsActionTypes } from './../../types/products';\n\nlet initialState: ProductState = {\n    products: [],\n    brandsFilter: [],\n}\n\nexport const productsReducer = (state = initialState, action: ProductsActions ):ProductState => {\n    switch(action.type) {\n        case ProductsActionTypes.GET_ALL_PRODUCT: {\n            return {\n                ...state,\n                products: action.payload,\n            }\n        }\n        case ProductsActionTypes.SET_BRANDS_FILTER:\n\n            if (state.brandsFilter.length === 0) return {                   //добавление но\n                ...state,\n                brandsFilter: [ action.payload]\n            }\n\n            if (state.brandsFilter.find ( (el) => el === action.payload )) {\n                const newBrandsFilter = state.brandsFilter.filter( el => el !== action.payload)\n                return {\n                    ...state,\n                    brandsFilter: [...newBrandsFilter]\n                }\n            } \n            return {\n                ...state, \n                brandsFilter: [...state.brandsFilter, action.payload]\n            }\n\n        default: \n            return {\n                ...state,\n            }\n    }\n}"],"mappings":"AAAA,SAAwCA,mBAAmB,QAAQ,wBAAwB;AAE3F,IAAIC,YAA0B,GAAG;EAC7BC,QAAQ,EAAE,EAAE;EACZC,YAAY,EAAE;AAClB,CAAC;AAED,OAAO,MAAMC,eAAe,GAAG,SAAAA,CAAA,EAAiE;EAAA,IAAhEC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,YAAY;EAAA,IAAEQ,MAAuB,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACzE,QAAOC,MAAM,CAACC,IAAI;IACd,KAAKV,mBAAmB,CAACW,eAAe;MAAE;QACtC,OAAO;UACH,GAAGN,KAAK;UACRH,QAAQ,EAAEO,MAAM,CAACG;QACrB,CAAC;MACL;IACA,KAAKZ,mBAAmB,CAACa,iBAAiB;MAEtC,IAAIR,KAAK,CAACF,YAAY,CAACI,MAAM,KAAK,CAAC,EAAE,OAAO;QAAoB;QAC5D,GAAGF,KAAK;QACRF,YAAY,EAAE,CAAEM,MAAM,CAACG,OAAO;MAClC,CAAC;MAED,IAAIP,KAAK,CAACF,YAAY,CAACW,IAAI,CAAIC,EAAE,IAAKA,EAAE,KAAKN,MAAM,CAACG,OAAO,CAAE,EAAE;QAC3D,MAAMI,eAAe,GAAGX,KAAK,CAACF,YAAY,CAACc,MAAM,CAAEF,EAAE,IAAIA,EAAE,KAAKN,MAAM,CAACG,OAAO,CAAC;QAC/E,OAAO;UACH,GAAGP,KAAK;UACRF,YAAY,EAAE,CAAC,GAAGa,eAAe;QACrC,CAAC;MACL;MACA,OAAO;QACH,GAAGX,KAAK;QACRF,YAAY,EAAE,CAAC,GAAGE,KAAK,CAACF,YAAY,EAAEM,MAAM,CAACG,OAAO;MACxD,CAAC;IAEL;MACI,OAAO;QACH,GAAGP;MACP,CAAC;EAAA;AAEb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}