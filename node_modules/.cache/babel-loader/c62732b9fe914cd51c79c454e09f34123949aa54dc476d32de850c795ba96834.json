{"ast":null,"code":"import { ProductsActionTypes } from './../../types/products';\nlet initialState = {\n  allProducts: [],\n  viewProducts: [],\n  brandsFilter: []\n};\nexport const productsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ProductsActionTypes.GET_ALL_PRODUCT:\n      {\n        return {\n          ...state,\n          allProducts: action.payload\n        };\n      }\n    case ProductsActionTypes.SET_BRANDS_FILTER:\n      if (state.brandsFilter.length === 0) return {\n        //добавление певого бренда\n        ...state,\n        brandsFilter: [action.payload]\n      };\n      if (state.brandsFilter.find(el => el === action.payload)) {\n        // проверка на наличие этого бренда\n        const newBrandsFilter = state.brandsFilter.filter(el => el !== action.payload);\n        return {\n          ...state,\n          brandsFilter: [...newBrandsFilter]\n        };\n      }\n      return {\n        // добавление последующих брендов\n        ...state,\n        brandsFilter: [...state.brandsFilter, action.payload]\n      };\n    case ProductsActionTypes.VIEW_PRODUCTS:\n      if (state.brandsFilter.length === 0) {\n        return {\n          ...state,\n          viewProducts: [...state.allProducts]\n        };\n      }\n      if (state.brandsFilter.length > 0) {\n        let newViewProduct = [];\n        console.log(newViewBrands);\n        state.allProducts.map(p => {\n          state.brandsFilter.map(b => {\n            if (p.brand === b) newViewBrands.push(p);\n            return {\n              ...state,\n              viewProducts: [...newViewBrands]\n            };\n          });\n        });\n      }\n      return {\n        ...state\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};","map":{"version":3,"names":["ProductsActionTypes","initialState","allProducts","viewProducts","brandsFilter","productsReducer","state","arguments","length","undefined","action","type","GET_ALL_PRODUCT","payload","SET_BRANDS_FILTER","find","el","newBrandsFilter","filter","VIEW_PRODUCTS","newViewProduct","console","log","newViewBrands","map","p","b","brand","push"],"sources":["/Users/romansehovcev/Documents/TestsProjects/test-project-accent/src/store/reducer/productsReducer.ts"],"sourcesContent":["import { ProductState, ProductsActions, ProductsActionTypes } from './../../types/products';\n\nlet initialState: ProductState = {\n    allProducts: [],\n    viewProducts: [],\n    brandsFilter: [],\n}\n\nexport const productsReducer = (state = initialState, action: ProductsActions ):ProductState => {\n    switch(action.type) {\n        case ProductsActionTypes.GET_ALL_PRODUCT: {\n            return {\n                ...state,\n                allProducts: action.payload,\n            }\n        }\n        case ProductsActionTypes.SET_BRANDS_FILTER:\n            if (state.brandsFilter.length === 0) return {                   //добавление певого бренда\n                ...state,\n                brandsFilter: [ action.payload]\n            }\n            if (state.brandsFilter.find ( (el) => el === action.payload )) {    // проверка на наличие этого бренда\n                const newBrandsFilter = state.brandsFilter.filter( el => el !== action.payload)\n                return {\n                    ...state,\n                    brandsFilter: [...newBrandsFilter]\n                }\n            } \n            return {                                                            // добавление последующих брендов\n                ...state, \n                brandsFilter: [...state.brandsFilter, action.payload]\n            }\n        case ProductsActionTypes.VIEW_PRODUCTS: \n\n            if (state.brandsFilter.length === 0) {\n                return {\n                    ...state,\n                    viewProducts: [...state.allProducts]\n                }\n            }\n\n            if(state.brandsFilter.length > 0) {\n                let newViewProduct: any[] = []\n                console.log(newViewBrands);\n                \n                state.allProducts.map ( p => {\n                    state.brandsFilter.map (b => {\n                        if (p.brand === b) newViewBrands.push(p)\n                        return {\n                            ...state,\n                            viewProducts: [...newViewBrands]\n                        }\n                    })\n                })\n            }\n            return {...state}\n\n        default: \n            return {\n                ...state,\n            }\n    }\n}"],"mappings":"AAAA,SAAwCA,mBAAmB,QAAQ,wBAAwB;AAE3F,IAAIC,YAA0B,GAAG;EAC7BC,WAAW,EAAE,EAAE;EACfC,YAAY,EAAE,EAAE;EAChBC,YAAY,EAAE;AAClB,CAAC;AAED,OAAO,MAAMC,eAAe,GAAG,SAAAA,CAAA,EAAiE;EAAA,IAAhEC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,YAAY;EAAA,IAAES,MAAuB,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACzE,QAAOC,MAAM,CAACC,IAAI;IACd,KAAKX,mBAAmB,CAACY,eAAe;MAAE;QACtC,OAAO;UACH,GAAGN,KAAK;UACRJ,WAAW,EAAEQ,MAAM,CAACG;QACxB,CAAC;MACL;IACA,KAAKb,mBAAmB,CAACc,iBAAiB;MACtC,IAAIR,KAAK,CAACF,YAAY,CAACI,MAAM,KAAK,CAAC,EAAE,OAAO;QAAoB;QAC5D,GAAGF,KAAK;QACRF,YAAY,EAAE,CAAEM,MAAM,CAACG,OAAO;MAClC,CAAC;MACD,IAAIP,KAAK,CAACF,YAAY,CAACW,IAAI,CAAIC,EAAE,IAAKA,EAAE,KAAKN,MAAM,CAACG,OAAO,CAAE,EAAE;QAAK;QAChE,MAAMI,eAAe,GAAGX,KAAK,CAACF,YAAY,CAACc,MAAM,CAAEF,EAAE,IAAIA,EAAE,KAAKN,MAAM,CAACG,OAAO,CAAC;QAC/E,OAAO;UACH,GAAGP,KAAK;UACRF,YAAY,EAAE,CAAC,GAAGa,eAAe;QACrC,CAAC;MACL;MACA,OAAO;QAA6D;QAChE,GAAGX,KAAK;QACRF,YAAY,EAAE,CAAC,GAAGE,KAAK,CAACF,YAAY,EAAEM,MAAM,CAACG,OAAO;MACxD,CAAC;IACL,KAAKb,mBAAmB,CAACmB,aAAa;MAElC,IAAIb,KAAK,CAACF,YAAY,CAACI,MAAM,KAAK,CAAC,EAAE;QACjC,OAAO;UACH,GAAGF,KAAK;UACRH,YAAY,EAAE,CAAC,GAAGG,KAAK,CAACJ,WAAW;QACvC,CAAC;MACL;MAEA,IAAGI,KAAK,CAACF,YAAY,CAACI,MAAM,GAAG,CAAC,EAAE;QAC9B,IAAIY,cAAqB,GAAG,EAAE;QAC9BC,OAAO,CAACC,GAAG,CAACC,aAAa,CAAC;QAE1BjB,KAAK,CAACJ,WAAW,CAACsB,GAAG,CAAGC,CAAC,IAAI;UACzBnB,KAAK,CAACF,YAAY,CAACoB,GAAG,CAAEE,CAAC,IAAI;YACzB,IAAID,CAAC,CAACE,KAAK,KAAKD,CAAC,EAAEH,aAAa,CAACK,IAAI,CAACH,CAAC,CAAC;YACxC,OAAO;cACH,GAAGnB,KAAK;cACRH,YAAY,EAAE,CAAC,GAAGoB,aAAa;YACnC,CAAC;UACL,CAAC,CAAC;QACN,CAAC,CAAC;MACN;MACA,OAAO;QAAC,GAAGjB;MAAK,CAAC;IAErB;MACI,OAAO;QACH,GAAGA;MACP,CAAC;EAAA;AAEb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}