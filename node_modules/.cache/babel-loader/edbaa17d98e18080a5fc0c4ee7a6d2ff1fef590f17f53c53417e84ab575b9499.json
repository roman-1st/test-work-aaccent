{"ast":null,"code":"import { OrderActionTypes } from './../../types/order';\nconst initialState = {\n  orderItem: [],\n  orderPrice: 0,\n  orderCurrency: \"USD\"\n};\nexport const orderReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case OrderActionTypes.ADD_TO_ORDER:\n      const itemPrice = action.payload;\n      return {\n        ...state,\n        orderItem: [...state.orderItem, action.payload],\n        orderPrice: state.orderPrice + itemPrice.regular_price.value\n      };\n    case OrderActionTypes.REMOVE_FROM_ORDER:\n      return {\n        ...state,\n        orderItem: state.orderItem.filter(item => item.id !== action.payload.id)\n      };\n    case DECREASE_ORDER_ITEM:\n      const updatedOrderItem = state.orderItem.map(item => {\n        if (item.id === action.payload.id) {\n          return {\n            ...item,\n            quantity: item.quantity - 1\n          };\n        } else {\n          return item;\n        }\n      }).filter(item => item.quantity > 0);\n      return {\n        ...state,\n        orderItem: updatedOrderItem\n      };\n    case 'INCREASE_ORDER_ITEM':\n      const increasedOrderItem = state.orderItem.map(item => {\n        if (item.id === action.payload.id) {\n          return {\n            ...item,\n            quantity: item.quantity + 1\n          };\n        } else {\n          return item;\n        }\n      });\n      return {\n        ...state,\n        orderItem: increasedOrderItem\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};","map":{"version":3,"names":["OrderActionTypes","initialState","orderItem","orderPrice","orderCurrency","orderReducer","state","arguments","length","undefined","action","type","ADD_TO_ORDER","itemPrice","payload","regular_price","value","REMOVE_FROM_ORDER","filter","item","id","DECREASE_ORDER_ITEM","updatedOrderItem","map","quantity","increasedOrderItem"],"sources":["/Users/romansehovcev/Documents/TestsProjects/test-project-accent/src/store/reducer/orderReducer.ts"],"sourcesContent":["import { OrderState, OrderActionTypes, OrderActions } from './../../types/order';\n\n\nconst initialState: OrderState = {\n    orderItem: [],\n    orderPrice: 0,\n    orderCurrency: \"USD\",\n}\n\nexport const orderReducer = (state = initialState, action: OrderActions): OrderState => {\n    switch(action.type) {\n        case OrderActionTypes.ADD_TO_ORDER: \n        const itemPrice:any = action.payload\n            return {\n                ...state,\n                orderItem: [...state.orderItem, action.payload],\n                orderPrice: state.orderPrice + itemPrice.regular_price.value\n            }\n              case  OrderActionTypes.REMOVE_FROM_ORDER:\n                return { ...state, orderItem: state.orderItem.filter((item) => item.id !== action.payload.id) };\n              case  DECREASE_ORDER_ITEM:\n                const updatedOrderItem = state.orderItem.map((item) => {\n                  if (item.id === action.payload.id) {\n                    return { ...item, quantity: item.quantity - 1 };\n                  } else {\n                    return item;\n                  }\n                }).filter((item) => item.quantity > 0);\n                return { ...state, orderItem: updatedOrderItem };\n              case 'INCREASE_ORDER_ITEM':\n                const increasedOrderItem = state.orderItem.map((item) => {\n                  if (item.id === action.payload.id) {\n                    return { ...item, quantity: item.quantity + 1 };\n                  } else {\n                    return item;\n                  }\n                });\n                return { ...state, orderItem: increasedOrderItem };\n\n        default: \n        return {\n            ...state\n        }\n    }\n}"],"mappings":"AAAA,SAAqBA,gBAAgB,QAAsB,qBAAqB;AAGhF,MAAMC,YAAwB,GAAG;EAC7BC,SAAS,EAAE,EAAE;EACbC,UAAU,EAAE,CAAC;EACbC,aAAa,EAAE;AACnB,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,SAAAA,CAAA,EAA4D;EAAA,IAA3DC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,YAAY;EAAA,IAAES,MAAoB,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACnE,QAAOC,MAAM,CAACC,IAAI;IACd,KAAKX,gBAAgB,CAACY,YAAY;MAClC,MAAMC,SAAa,GAAGH,MAAM,CAACI,OAAO;MAChC,OAAO;QACH,GAAGR,KAAK;QACRJ,SAAS,EAAE,CAAC,GAAGI,KAAK,CAACJ,SAAS,EAAEQ,MAAM,CAACI,OAAO,CAAC;QAC/CX,UAAU,EAAEG,KAAK,CAACH,UAAU,GAAGU,SAAS,CAACE,aAAa,CAACC;MAC3D,CAAC;IACC,KAAMhB,gBAAgB,CAACiB,iBAAiB;MACtC,OAAO;QAAE,GAAGX,KAAK;QAAEJ,SAAS,EAAEI,KAAK,CAACJ,SAAS,CAACgB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKV,MAAM,CAACI,OAAO,CAACM,EAAE;MAAE,CAAC;IACjG,KAAMC,mBAAmB;MACvB,MAAMC,gBAAgB,GAAGhB,KAAK,CAACJ,SAAS,CAACqB,GAAG,CAAEJ,IAAI,IAAK;QACrD,IAAIA,IAAI,CAACC,EAAE,KAAKV,MAAM,CAACI,OAAO,CAACM,EAAE,EAAE;UACjC,OAAO;YAAE,GAAGD,IAAI;YAAEK,QAAQ,EAAEL,IAAI,CAACK,QAAQ,GAAG;UAAE,CAAC;QACjD,CAAC,MAAM;UACL,OAAOL,IAAI;QACb;MACF,CAAC,CAAC,CAACD,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACK,QAAQ,GAAG,CAAC,CAAC;MACtC,OAAO;QAAE,GAAGlB,KAAK;QAAEJ,SAAS,EAAEoB;MAAiB,CAAC;IAClD,KAAK,qBAAqB;MACxB,MAAMG,kBAAkB,GAAGnB,KAAK,CAACJ,SAAS,CAACqB,GAAG,CAAEJ,IAAI,IAAK;QACvD,IAAIA,IAAI,CAACC,EAAE,KAAKV,MAAM,CAACI,OAAO,CAACM,EAAE,EAAE;UACjC,OAAO;YAAE,GAAGD,IAAI;YAAEK,QAAQ,EAAEL,IAAI,CAACK,QAAQ,GAAG;UAAE,CAAC;QACjD,CAAC,MAAM;UACL,OAAOL,IAAI;QACb;MACF,CAAC,CAAC;MACF,OAAO;QAAE,GAAGb,KAAK;QAAEJ,SAAS,EAAEuB;MAAmB,CAAC;IAE1D;MACA,OAAO;QACH,GAAGnB;MACP,CAAC;EAAA;AAET,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}