{"ast":null,"code":"import { ProductsActionTypes } from './../../types/products';\nlet initialState = {\n  allProducts: [],\n  displayProducts: [],\n  filterByBrand: [],\n  startDisplayInd: 0,\n  countDisplayProduct: 6,\n  pageProduct: 1\n};\nexport const productsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ProductsActionTypes.GET_ALL_PRODUCT:\n      {\n        return {\n          ...state,\n          allProducts: [...action.payload],\n          displayProducts: [...action.payload.splice(state.startDisplayInd, state.countDisplayProduct)]\n        };\n      }\n    case ProductsActionTypes.SET_BRANDS_FILTER:\n      //allProducts.map ( el => {\n      //     filterByBrand.map( bra => {\n      //         if( bra === el.brand ) {\n      //             display.push(el) \n      //     }\n      //})\n\n      state.allProducts.map(el => {\n        state.filterByBrand.map(b => {});\n      });\n      if (state.filterByBrand.length === 0) return {\n        //добавление певого бренда\n        ...state,\n        filterByBrand: [action.payload]\n      };\n      if (state.filterByBrand.find(el => el === action.payload)) {\n        // проверка на наличие этого бренда\n        const newBrandsFilter = state.filterByBrand.filter(el => el !== action.payload);\n        return {\n          ...state,\n          filterByBrand: [...newBrandsFilter]\n        };\n      }\n      return {\n        // добавление последующих брендов\n        ...state,\n        filterByBrand: [...state.filterByBrand, action.payload]\n      };\n    case ProductsActionTypes.GO_TO_NEXT_PAGE:\n      return {\n        ...state,\n        allProducts: [...state.allProducts],\n        displayProducts: [...state.allProducts.splice(state.startDisplayInd + 6, state.countDisplayProduct)],\n        startDisplayInd: state.startDisplayInd + 6,\n        pageProduct: state.pageProduct + 1\n      };\n    case ProductsActionTypes.GO_TO_PREVIOUS_PAGE:\n      return {\n        ...state,\n        allProducts: [...state.allProducts],\n        displayProducts: [...state.allProducts.splice(state.startDisplayInd - 6, state.countDisplayProduct)],\n        startDisplayInd: state.startDisplayInd - 6,\n        pageProduct: state.pageProduct - 1\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};","map":{"version":3,"names":["ProductsActionTypes","initialState","allProducts","displayProducts","filterByBrand","startDisplayInd","countDisplayProduct","pageProduct","productsReducer","state","arguments","length","undefined","action","type","GET_ALL_PRODUCT","payload","splice","SET_BRANDS_FILTER","map","el","b","find","newBrandsFilter","filter","GO_TO_NEXT_PAGE","GO_TO_PREVIOUS_PAGE"],"sources":["/Users/romansehovcev/Documents/TestsProjects/test-project-accent/src/store/reducer/productsReducer.ts"],"sourcesContent":["import { ProductState, ProductsActions, ProductsActionTypes } from './../../types/products';\n\nlet initialState: ProductState = {\n    allProducts: [],\n    displayProducts: [],\n    filterByBrand: [],\n\n    startDisplayInd: 0,\n    countDisplayProduct: 6,\n    pageProduct: 1,\n}\n\nexport const productsReducer = (state = initialState, action: ProductsActions ):ProductState => {\n    switch(action.type) {\n        case ProductsActionTypes.GET_ALL_PRODUCT: {\n            return {\n                ...state,\n                allProducts: [...action.payload],\n                displayProducts: [ ...action.payload.splice(state.startDisplayInd, state.countDisplayProduct)],\n            }\n        }\n        case ProductsActionTypes.SET_BRANDS_FILTER:\n\n        //allProducts.map ( el => {\n        //     filterByBrand.map( bra => {\n        //         if( bra === el.brand ) {\n        //             display.push(el) \n        //     }\n        //})\n\n        state.allProducts.map( el => {\n            state.filterByBrand.map( b => {\n\n            })\n        })\n\n            if (state.filterByBrand.length === 0) return {                              //добавление певого бренда\n                ...state,\n                filterByBrand: [ action.payload]\n            }\n            if (state.filterByBrand.find ( (el) => el === action.payload )) {           // проверка на наличие этого бренда\n                const newBrandsFilter = state.filterByBrand.filter( el => el !== action.payload)\n                return {\n                    ...state,\n                    filterByBrand: [...newBrandsFilter]\n                }\n            } \n            return {                                                            // добавление последующих брендов\n                ...state, \n                filterByBrand: [...state.filterByBrand, action.payload]\n            }\n\n        case ProductsActionTypes.GO_TO_NEXT_PAGE: \n            return {\n                ...state,\n                allProducts: [...state.allProducts],\n                displayProducts: [...state.allProducts.splice(state.startDisplayInd + 6, state.countDisplayProduct)],\n                startDisplayInd: state.startDisplayInd + 6,\n                pageProduct: state.pageProduct + 1\n            }\n        case ProductsActionTypes.GO_TO_PREVIOUS_PAGE:\n            return {\n                ...state,\n                allProducts: [...state.allProducts],\n                displayProducts: [...state.allProducts.splice(state.startDisplayInd -6, state.countDisplayProduct)],\n                startDisplayInd: state.startDisplayInd -6,\n                pageProduct: state.pageProduct - 1\n            }\n\n        default: \n            return {\n                ...state,\n            }\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}