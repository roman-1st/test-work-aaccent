{"ast":null,"code":"import { ProductsActionTypes } from './../../types/products';\nlet initialState = {\n  getProducts: [],\n  displayProducts: [],\n  filterByBrand: [],\n  displayProductsWithoutFilter: [],\n  startDisplayInd: 0,\n  countDisplayProduct: 6,\n  pageProduct: 1\n};\nexport const productsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ProductsActionTypes.GET_ALL_PRODUCT:\n      {\n        return {\n          ...state,\n          getProducts: [...action.payload],\n          productsWithoutFilter: [...action.payload],\n          displayProducts: [...action.payload.splice(state.startDisplayInd, state.countDisplayProduct)]\n        };\n      }\n    case ProductsActionTypes.SET_BRANDS_FILTER:\n      state.getProducts.map(el => {\n        state.filterByBrand.map(b => {\n          if (b == el.brand) {}\n        });\n      });\n      if (state.filterByBrand.length === 0) return {\n        //добавление певого бренда\n        ...state,\n        filterByBrand: [action.payload]\n      };\n      if (state.filterByBrand.find(el => el === action.payload)) {\n        // проверка на наличие этого бренда\n        const newBrandsFilter = state.filterByBrand.filter(el => el !== action.payload);\n        return {\n          ...state,\n          filterByBrand: [...newBrandsFilter]\n        };\n      }\n      return {\n        // добавление последующих брендов\n        ...state,\n        filterByBrand: [...state.filterByBrand, action.payload]\n      };\n    case ProductsActionTypes.GO_TO_NEXT_PAGE:\n      return {\n        ...state,\n        getProducts: [...state.getProducts],\n        displayProducts: [...state.getProducts.splice(state.startDisplayInd + 6, state.countDisplayProduct)],\n        startDisplayInd: state.startDisplayInd + 6,\n        pageProduct: state.pageProduct + 1\n      };\n    case ProductsActionTypes.GO_TO_PREVIOUS_PAGE:\n      return {\n        ...state,\n        getProducts: [...state.getProducts],\n        displayProducts: [...state.getProducts.splice(state.startDisplayInd - 6, state.countDisplayProduct)],\n        startDisplayInd: state.startDisplayInd - 6,\n        pageProduct: state.pageProduct - 1\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};","map":{"version":3,"names":["ProductsActionTypes","initialState","getProducts","displayProducts","filterByBrand","displayProductsWithoutFilter","startDisplayInd","countDisplayProduct","pageProduct","productsReducer","state","arguments","length","undefined","action","type","GET_ALL_PRODUCT","payload","productsWithoutFilter","splice","SET_BRANDS_FILTER","map","el","b","brand","find","newBrandsFilter","filter","GO_TO_NEXT_PAGE","GO_TO_PREVIOUS_PAGE"],"sources":["/Users/romansehovcev/Documents/TestsProjects/test-project-accent/src/store/reducer/productsReducer.ts"],"sourcesContent":["import { ProductState, ProductsActions, ProductsActionTypes } from './../../types/products';\n\nlet initialState: ProductState = {\n    getProducts: [],\n\n    displayProducts: [],\n\n    filterByBrand: [],\n    displayProductsWithoutFilter: [],\n\n    startDisplayInd: 0,\n    countDisplayProduct: 6,\n    pageProduct: 1,\n}\n\nexport const productsReducer = (state = initialState, action: ProductsActions ):ProductState => {\n    switch(action.type) {\n        case ProductsActionTypes.GET_ALL_PRODUCT: {\n            return {\n                ...state,\n                getProducts: [...action.payload],\n                productsWithoutFilter: [...action.payload],\n                displayProducts: [ ...action.payload.splice(state.startDisplayInd, state.countDisplayProduct)],\n            }\n        }\n\n\n        case ProductsActionTypes.SET_BRANDS_FILTER:\n        state.getProducts.map( el => {\n            state.filterByBrand.map( b => {\n                if( b == el.brand ) {\n\n                }\n            })\n        })\n\n\n\n        if (state.filterByBrand.length === 0) return {                              //добавление певого бренда\n            ...state,\n            filterByBrand: [ action.payload]\n        }\n        if (state.filterByBrand.find ( (el) => el === action.payload )) {           // проверка на наличие этого бренда\n            const newBrandsFilter = state.filterByBrand.filter( el => el !== action.payload)\n            return {\n                ...state,\n                filterByBrand: [...newBrandsFilter]\n            }\n        } \n        return {                                                                    // добавление последующих брендов\n            ...state, \n            filterByBrand: [...state.filterByBrand, action.payload]\n        }\n\n\n\n\n        case ProductsActionTypes.GO_TO_NEXT_PAGE: \n            return {\n                ...state,\n                getProducts: [...state.getProducts],\n                displayProducts: [...state.getProducts.splice(state.startDisplayInd + 6, state.countDisplayProduct)],\n                startDisplayInd: state.startDisplayInd + 6,\n                pageProduct: state.pageProduct + 1\n            }\n        case ProductsActionTypes.GO_TO_PREVIOUS_PAGE:\n            return {\n                ...state,\n                getProducts: [...state.getProducts],\n                displayProducts: [...state.getProducts.splice(state.startDisplayInd -6, state.countDisplayProduct)],\n                startDisplayInd: state.startDisplayInd -6,\n                pageProduct: state.pageProduct - 1\n            }\n\n        default: \n            return {\n                ...state,\n            }\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}