{"ast":null,"code":"import { useTypedSelector } from './../../hooks/useTypedSelector';\nimport { ProductsActionTypes } from './../../types/products';\nconst {\n  products\n} = useTypedSelector(state => state.product);\nexport const getProductAction = products => {\n  return {\n    type: ProductsActionTypes.GET_ALL_PRODUCT,\n    payload: products\n  };\n};\nexport const setBrandsFilterAction = brandNumber => {\n  console.log(products);\n  return {\n    type: ProductsActionTypes.SET_BRANDS_FILTER,\n    payload: brandNumber\n  };\n};","map":{"version":3,"names":["useTypedSelector","ProductsActionTypes","products","state","product","getProductAction","type","GET_ALL_PRODUCT","payload","setBrandsFilterAction","brandNumber","console","log","SET_BRANDS_FILTER"],"sources":["/Users/romansehovcev/Documents/TestsProjects/test-project-accent/src/store/action-creators/products-actions.ts"],"sourcesContent":["import { useTypedSelector } from './../../hooks/useTypedSelector';\nimport { ProductsActionTypes } from './../../types/products';\n\nconst {products} = useTypedSelector(state => state.product)\n\nexport const getProductAction = (products: any[]) => {\n    return {type: ProductsActionTypes.GET_ALL_PRODUCT, payload: products}\n}\n\nexport const setBrandsFilterAction = (brandNumber: number) => {\n    console.log(products);\n    \n    return {type: ProductsActionTypes.SET_BRANDS_FILTER, payload: brandNumber}\n}"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,gCAAgC;AACjE,SAASC,mBAAmB,QAAQ,wBAAwB;AAE5D,MAAM;EAACC;AAAQ,CAAC,GAAGF,gBAAgB,CAACG,KAAK,IAAIA,KAAK,CAACC,OAAO,CAAC;AAE3D,OAAO,MAAMC,gBAAgB,GAAIH,QAAe,IAAK;EACjD,OAAO;IAACI,IAAI,EAAEL,mBAAmB,CAACM,eAAe;IAAEC,OAAO,EAAEN;EAAQ,CAAC;AACzE,CAAC;AAED,OAAO,MAAMO,qBAAqB,GAAIC,WAAmB,IAAK;EAC1DC,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;EAErB,OAAO;IAACI,IAAI,EAAEL,mBAAmB,CAACY,iBAAiB;IAAEL,OAAO,EAAEE;EAAW,CAAC;AAC9E,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}