{"ast":null,"code":"import { BrandsActionsTypes } from './../../types/brand';\nconst initialState = {\n  brands: []\n};\nexport const brandsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case BrandsActionsTypes.ADD_BRANDS:\n      return {\n        ...state,\n        brands\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};","map":{"version":3,"names":["BrandsActionsTypes","initialState","brands","brandsReducer","state","arguments","length","undefined","action","type","ADD_BRANDS"],"sources":["/Users/romansehovcev/Documents/TestsProjects/test-project-accent/src/store/reducer/brandsReducer.ts"],"sourcesContent":["import { BrandsState, BrandsActions, BrandsActionsTypes } from './../../types/brand';\n\nconst initialState: BrandsState = {\n    brands: [],\n}\n\nexport const brandsReducer = (state = initialState, action: BrandsActions): BrandsState => {\n    switch(action.type) {\n        case BrandsActionsTypes.ADD_BRANDS:\n            return {\n                ...state,\n                brands\n            }\n\n        default:\n            return {...state}\n    }\n}"],"mappings":"AAAA,SAAqCA,kBAAkB,QAAQ,qBAAqB;AAEpF,MAAMC,YAAyB,GAAG;EAC9BC,MAAM,EAAE;AACZ,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,SAAAA,CAAA,EAA8D;EAAA,IAA7DC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,YAAY;EAAA,IAAEO,MAAqB,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACrE,QAAOC,MAAM,CAACC,IAAI;IACd,KAAKT,kBAAkB,CAACU,UAAU;MAC9B,OAAO;QACH,GAAGN,KAAK;QACRF;MACJ,CAAC;IAEL;MACI,OAAO;QAAC,GAAGE;MAAK,CAAC;EAAA;AAE7B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}