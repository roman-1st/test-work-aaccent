{"ast":null,"code":"import { ProductsActionTypes } from './../../types/products';\nlet initialState = {\n  products: [],\n  brandsFilter: [1]\n};\nexport const productsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ProductsActionTypes.GET_ALL_PRODUCT:\n      {\n        return {\n          ...state,\n          products: action.payload\n        };\n      }\n    case ProductsActionTypes.SET_BRANDS_FILTER:\n      let newBrandsFilter;\n      let newBrands = state.brandsFilter.find(el => el === action.payload);\n      if (!newBrands) return {\n        ...state,\n        brandsFilter: [...state.brandsFilter, action.payload]\n      };\n      if (newBrands) {\n        newBrandsFilter = state.brandsFilter.slice(action.payload, 1);\n        console.log(state.brandsFilter);\n        return {\n          ...state,\n          brandsFilter: [...newBrandsFilter]\n        };\n      }\n      return {\n        ...state\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};","map":{"version":3,"names":["ProductsActionTypes","initialState","products","brandsFilter","productsReducer","state","arguments","length","undefined","action","type","GET_ALL_PRODUCT","payload","SET_BRANDS_FILTER","newBrandsFilter","newBrands","find","el","slice","console","log"],"sources":["/Users/romansehovcev/Documents/TestsProjects/test-project-accent/src/store/reducer/productsReducer.ts"],"sourcesContent":["import { ProductState, ProductsActions, ProductsActionTypes } from './../../types/products';\n\nlet initialState: ProductState = {\n    products: [],\n    brandsFilter: [1],\n}\n\nexport const productsReducer = (state = initialState, action: ProductsActions ):ProductState => {\n    switch(action.type) {\n        case ProductsActionTypes.GET_ALL_PRODUCT: {\n            return {\n                ...state,\n                products: action.payload,\n            }\n        }\n        case ProductsActionTypes.SET_BRANDS_FILTER:\n            let newBrandsFilter\n            let newBrands = state.brandsFilter.find ( el => el === action.payload)\n            if (!newBrands) return {\n                ...state,\n                brandsFilter: [...state.brandsFilter, action.payload]\n            }\n            if (newBrands) {\n                newBrandsFilter = state.brandsFilter.slice(action.payload, 1)\n                console.log(state.brandsFilter);\n                \n                return {\n                    ...state,\n                    brandsFilter: [...newBrandsFilter]\n                }\n            }\n            \n\n            return { ...state}\n\n        default: \n            return {\n                ...state,\n            }\n    }\n}"],"mappings":"AAAA,SAAwCA,mBAAmB,QAAQ,wBAAwB;AAE3F,IAAIC,YAA0B,GAAG;EAC7BC,QAAQ,EAAE,EAAE;EACZC,YAAY,EAAE,CAAC,CAAC;AACpB,CAAC;AAED,OAAO,MAAMC,eAAe,GAAG,SAAAA,CAAA,EAAiE;EAAA,IAAhEC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,YAAY;EAAA,IAAEQ,MAAuB,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACzE,QAAOC,MAAM,CAACC,IAAI;IACd,KAAKV,mBAAmB,CAACW,eAAe;MAAE;QACtC,OAAO;UACH,GAAGN,KAAK;UACRH,QAAQ,EAAEO,MAAM,CAACG;QACrB,CAAC;MACL;IACA,KAAKZ,mBAAmB,CAACa,iBAAiB;MACtC,IAAIC,eAAe;MACnB,IAAIC,SAAS,GAAGV,KAAK,CAACF,YAAY,CAACa,IAAI,CAAGC,EAAE,IAAIA,EAAE,KAAKR,MAAM,CAACG,OAAO,CAAC;MACtE,IAAI,CAACG,SAAS,EAAE,OAAO;QACnB,GAAGV,KAAK;QACRF,YAAY,EAAE,CAAC,GAAGE,KAAK,CAACF,YAAY,EAAEM,MAAM,CAACG,OAAO;MACxD,CAAC;MACD,IAAIG,SAAS,EAAE;QACXD,eAAe,GAAGT,KAAK,CAACF,YAAY,CAACe,KAAK,CAACT,MAAM,CAACG,OAAO,EAAE,CAAC,CAAC;QAC7DO,OAAO,CAACC,GAAG,CAACf,KAAK,CAACF,YAAY,CAAC;QAE/B,OAAO;UACH,GAAGE,KAAK;UACRF,YAAY,EAAE,CAAC,GAAGW,eAAe;QACrC,CAAC;MACL;MAGA,OAAO;QAAE,GAAGT;MAAK,CAAC;IAEtB;MACI,OAAO;QACH,GAAGA;MACP,CAAC;EAAA;AAEb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}