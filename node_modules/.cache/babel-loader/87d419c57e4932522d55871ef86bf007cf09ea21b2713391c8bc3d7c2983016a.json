{"ast":null,"code":"import { OrderActionTypes } from './../../types/order';\nconst initialState = {\n  orderItem: [],\n  orderPrice: 0,\n  orderCurrency: \"USD\",\n  orderResult: null\n};\nexport const orderReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case OrderActionTypes.ADD_TO_ORDER:\n      const item = action.payload;\n      return {\n        ...state,\n        orderItem: [...state.orderItem, action.payload],\n        orderPrice: Number((state.orderPrice + item.regular_price.value).toFixed(2))\n      };\n    case OrderActionTypes.REMOVE_FROM_ORDER:\n      let priceRemove = 0;\n      state.orderItem.filter(item => item.id !== action.payload).map(el => {\n        priceRemove += el.regular_price.value;\n      });\n      return {\n        ...state,\n        orderItem: state.orderItem.filter(item => item.id !== action.payload),\n        orderPrice: Number(priceRemove.toFixed(2))\n      };\n    case OrderActionTypes.DECREASE_ORDER_ITEM:\n      const removePrice = action.payload.regular_price.value;\n      const deletedItem = state.orderItem.findIndex(el => el.id === action.payload.id);\n      const newOrderItem = state.orderItem.slice(0, deletedItem).concat(state.orderItem.slice(deletedItem + 1));\n      return {\n        ...state,\n        orderItem: [...newOrderItem],\n        orderPrice: Number((state.orderPrice - removePrice).toFixed(2))\n      };\n    case OrderActionTypes.INCREASE_ORDER_ITEM:\n      const addPrice = action.payload.regular_price.value;\n      return {\n        ...state,\n        orderItem: [...state.orderItem, action.payload],\n        orderPrice: Number((state.orderPrice + addPrice).toFixed(2))\n      };\n    case OrderActionTypes.GET_ORDER_RESULT:\n      return {\n        ...state,\n        orderResult: action.payload\n      };\n    case OrderActionTypes.CLEAR_ORDER:\n      return {\n        ...state,\n        orderItem: [],\n        orderPrice: 0,\n        orderResult: null\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};","map":{"version":3,"names":["OrderActionTypes","initialState","orderItem","orderPrice","orderCurrency","orderResult","orderReducer","state","arguments","length","undefined","action","type","ADD_TO_ORDER","item","payload","Number","regular_price","value","toFixed","REMOVE_FROM_ORDER","priceRemove","filter","id","map","el","DECREASE_ORDER_ITEM","removePrice","deletedItem","findIndex","newOrderItem","slice","concat","INCREASE_ORDER_ITEM","addPrice","GET_ORDER_RESULT","CLEAR_ORDER"],"sources":["/Users/romansehovcev/Documents/TestsProjects/test-project-accent/src/store/reducer/orderReducer.ts"],"sourcesContent":["import { OrderState, OrderActionTypes, OrderActions, OrderItem } from './../../types/order';\n\n\nconst initialState: OrderState = {\n    orderItem: [],\n    orderPrice: 0,\n    orderCurrency: \"USD\",\n    orderResult: null,\n}\n\nexport const orderReducer = (state = initialState, action: OrderActions): OrderState => {\n    switch (action.type) {\n        case OrderActionTypes.ADD_TO_ORDER:\n            const item: OrderItem = action.payload\n            return {\n                ...state,\n                orderItem: [...state.orderItem, action.payload],\n                orderPrice: Number((state.orderPrice + item.regular_price.value).toFixed(2))\n            }\n        case OrderActionTypes.REMOVE_FROM_ORDER:\n            let priceRemove: number = 0\n            state.orderItem.filter((item) => item.id !== action.payload).map(el => {\n                priceRemove += el.regular_price.value\n            })\n\n            return {\n                ...state,\n                orderItem: state.orderItem.filter((item) => item.id !== action.payload),\n                orderPrice: Number(priceRemove.toFixed(2)),\n            };\n        case OrderActionTypes.DECREASE_ORDER_ITEM:\n            const removePrice: any = action.payload.regular_price.value\n            const deletedItem = state.orderItem.findIndex(el => el.id === action.payload.id)\n            const newOrderItem =\n                state.orderItem.slice(0, deletedItem)\n                    .concat(state.orderItem\n                        .slice(deletedItem + 1));\n            return {\n                ...state,\n                orderItem: [...newOrderItem],\n                orderPrice: Number((state.orderPrice - removePrice).toFixed(2)),\n            };\n\n        case OrderActionTypes.INCREASE_ORDER_ITEM:\n            const addPrice: any = action.payload.regular_price.value\n            return {\n                ...state,\n                orderItem: [...state.orderItem, action.payload],\n                orderPrice: Number((state.orderPrice + addPrice).toFixed(2)),\n            };\n        case OrderActionTypes.GET_ORDER_RESULT:\n            return {\n                ...state,\n                orderResult: action.payload,\n            }\n        case OrderActionTypes.CLEAR_ORDER:\n\n            return {\n                ...state,\n                orderItem: [],\n                orderPrice: 0,\n                orderResult: null,\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}