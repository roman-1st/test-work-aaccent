{"ast":null,"code":"export let BrandsActionsTypes = /*#__PURE__*/function (BrandsActionsTypes) {\n  BrandsActionsTypes[\"ADD_BRANDS\"] = \"ADD_BRANDS\";\n  BrandsActionsTypes[\"VIEW_BRANDS\"] = \"VIEW_BRANDS\";\n  return BrandsActionsTypes;\n}({});","map":{"version":3,"names":["BrandsActionsTypes"],"sources":["/Users/romansehovcev/Documents/TestsProjects/test-project-accent/src/types/brand.ts"],"sourcesContent":["export interface BrandsState{\n    brands: any[],\n    viewBrands: boolean,\n}\n\nexport interface BrandList {\n    id: number,\n    title: string,\n    sort: string,\n    code: string,\n    checked: boolean;\n    onChange: (checked: boolean) => void;\n}\n\nexport enum BrandsActionsTypes {\n    ADD_BRANDS = \"ADD_BRANDS\",\n    VIEW_BRANDS = \"VIEW_BRANDS\"\n}\n\ninterface addBrandsAction {\n    type: BrandsActionsTypes.ADD_BRANDS,\n    payload: any[],\n}\n\ninterface viewBrandsAction {\n    type: BrandsActionsTypes.VIEW_BRANDS,\n}\n\nexport type BrandsActions = \naddBrandsAction |\nviewBrandsAction"],"mappings":"AAcA,WAAYA,kBAAkB,0BAAlBA,kBAAkB;EAAlBA,kBAAkB;EAAlBA,kBAAkB;EAAA,OAAlBA,kBAAkB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}