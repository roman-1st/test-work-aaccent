{"ast":null,"code":"var _jsxFileName = \"/Users/romansehovcev/Documents/TestsProjects/test-project-accent/src/components/CheckoutOrder/CheckoutOrder.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\nimport \"./CheckoutOrder.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckoutOrder = () => {\n  _s();\n  const {\n    orderItem\n  } = useTypedSelector(state => state.order);\n  const countItems = {};\n  console.log(orderItem);\n  for (const item of orderItem) {\n    countItems[item] = countItems[item] ? countItems[item] + 1 : 1;\n  }\n  const result = Object.keys(countItems).filter(item => countItems[item] > 1);\n  console.dir(result); // => ['3', '4', '19']\n\n  const orderItemCount = {};\n  orderItem.forEach(item => {\n    orderItemCount[item.id] = (orderItemCount[item.id] || 0) + 1;\n  });\n\n  // Создаем новый массив, в котором каждый элемент массива orderItem представлен только один раз\n  const uniqueOrderItem = orderItem.filter((item, index, self) => self.findIndex(t => t.id === item.id) === index);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), orderItem.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u041A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0430 \\u043F\\u0443\\u0441\\u0442\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: uniqueOrderItem.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [item.name, \" (\", orderItemCount[item.id], \")\"]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n\n  //   return (\n  //     <div className=\"orderPage\">\n  //       <div className=\"orderContainer\">\n  //         <div className=\"orderMenu\">\n  //           <h3> Корзина покупок </h3>\n  //           <button> Clear order </button>\n  //           <button> Checkout Order </button>\n  //         </div>\n  //         <div className=\"orderList\">\n  //             <h3> Selected products: __ </h3>\n  //           {orderItem.map((el) => (\n  //             <p>\n  //               {el.title} + {el.id} + {el.price}\n  //             </p>\n  //           ))}\n  //         </div>\n  //       </div>\n  //     </div>\n};\n_s(CheckoutOrder, \"u9emSlTwr5gTtGULoWq6fFPJ2TA=\", false, function () {\n  return [useTypedSelector];\n});\n_c = CheckoutOrder;\nexport default CheckoutOrder;\nvar _c;\n$RefreshReg$(_c, \"CheckoutOrder\");","map":{"version":3,"names":["React","useTypedSelector","jsxDEV","_jsxDEV","CheckoutOrder","_s","orderItem","state","order","countItems","console","log","item","result","Object","keys","filter","dir","orderItemCount","forEach","id","uniqueOrderItem","index","self","findIndex","t","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","name","_c","$RefreshReg$"],"sources":["/Users/romansehovcev/Documents/TestsProjects/test-project-accent/src/components/CheckoutOrder/CheckoutOrder.tsx"],"sourcesContent":["import { stat } from \"fs\";\nimport React from \"react\";\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\nimport \"./CheckoutOrder.css\";\n\nconst CheckoutOrder = () => {\n  const { orderItem } = useTypedSelector((state) => state.order);\n  const countItems: any = {}\n\n  console.log(orderItem);\n\n  \n    for ( const item of orderItem) {\n        countItems[item] = countItems[item] ? countItems[item] + 1 : 1;\n    }\n\n    const result = Object.keys(countItems).filter((item) => countItems[item] > 1);\nconsole.dir(result); // => ['3', '4', '19']\n\n\nconst orderItemCount: any = {};\norderItem.forEach((item) => {\n  orderItemCount[item.id] = (orderItemCount[item.id] || 0) + 1;\n});\n\n// Создаем новый массив, в котором каждый элемент массива orderItem представлен только один раз\nconst uniqueOrderItem = orderItem.filter(\n  (item, index, self) => self.findIndex((t) => t.id === item.id) === index\n);\n\nreturn (\n    <div>\n      <h2>Корзина</h2>\n      {orderItem.length === 0 ? (\n        <div>Корзина пуста</div>\n      ) : (\n        <div>\n          {uniqueOrderItem.map((item) => (\n            <div key={item.id}>\n              {item.name} ({orderItemCount[item.id]})\n              {/* <button onClick={() => dispatch(removeFromOrder(item.id))}>Удалить</button>\n              <button onClick={() => dispatch(decreaseOrderItem(item))}>-</button>\n              <button onClick={() => dispatch(increaseOrderItem(item))}>+</button> */}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n\n//   return (\n//     <div className=\"orderPage\">\n//       <div className=\"orderContainer\">\n//         <div className=\"orderMenu\">\n//           <h3> Корзина покупок </h3>\n//           <button> Clear order </button>\n//           <button> Checkout Order </button>\n//         </div>\n//         <div className=\"orderList\">\n//             <h3> Selected products: __ </h3>\n//           {orderItem.map((el) => (\n//             <p>\n//               {el.title} + {el.id} + {el.price}\n//             </p>\n//           ))}\n//         </div>\n//       </div>\n//     </div>\n\n};\n\nexport default CheckoutOrder;\n"],"mappings":";;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,8BAA8B;AAC/D,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAU,CAAC,GAAGL,gBAAgB,CAAEM,KAAK,IAAKA,KAAK,CAACC,KAAK,CAAC;EAC9D,MAAMC,UAAe,GAAG,CAAC,CAAC;EAE1BC,OAAO,CAACC,GAAG,CAACL,SAAS,CAAC;EAGpB,KAAM,MAAMM,IAAI,IAAIN,SAAS,EAAE;IAC3BG,UAAU,CAACG,IAAI,CAAC,GAAGH,UAAU,CAACG,IAAI,CAAC,GAAGH,UAAU,CAACG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;EAClE;EAEA,MAAMC,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACN,UAAU,CAAC,CAACO,MAAM,CAAEJ,IAAI,IAAKH,UAAU,CAACG,IAAI,CAAC,GAAG,CAAC,CAAC;EACjFF,OAAO,CAACO,GAAG,CAACJ,MAAM,CAAC,CAAC,CAAC;;EAGrB,MAAMK,cAAmB,GAAG,CAAC,CAAC;EAC9BZ,SAAS,CAACa,OAAO,CAAEP,IAAI,IAAK;IAC1BM,cAAc,CAACN,IAAI,CAACQ,EAAE,CAAC,GAAG,CAACF,cAAc,CAACN,IAAI,CAACQ,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;EAC9D,CAAC,CAAC;;EAEF;EACA,MAAMC,eAAe,GAAGf,SAAS,CAACU,MAAM,CACtC,CAACJ,IAAI,EAAEU,KAAK,EAAEC,IAAI,KAAKA,IAAI,CAACC,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACL,EAAE,KAAKR,IAAI,CAACQ,EAAE,CAAC,KAAKE,KAAK,CACzE;EAED,oBACInB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EACfxB,SAAS,CAACyB,MAAM,KAAK,CAAC,gBACrB5B,OAAA;MAAAuB,QAAA,EAAK;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,gBAExB3B,OAAA;MAAAuB,QAAA,EACGL,eAAe,CAACW,GAAG,CAAEpB,IAAI,iBACxBT,OAAA;QAAAuB,QAAA,GACGd,IAAI,CAACqB,IAAI,EAAC,IAAE,EAACf,cAAc,CAACN,IAAI,CAACQ,EAAE,CAAC,EAAC,GACtC;MAAA,GAFQR,IAAI,CAACQ,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAMlB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;;EAGV;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAEA,CAAC;AAACzB,EAAA,CAhEID,aAAa;EAAA,QACKH,gBAAgB;AAAA;AAAAiC,EAAA,GADlC9B,aAAa;AAkEnB,eAAeA,aAAa;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}