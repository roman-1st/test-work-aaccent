{"ast":null,"code":"import { OrderActionTypes } from './../../types/order';\nconst initialState = {\n  orderItem: [],\n  orderPrice: 0,\n  orderCurrency: \"USD\"\n};\nexport const orderReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case OrderActionTypes.ADD_TO_ORDER:\n      const itemPrice = action.payload;\n      return {\n        ...state,\n        orderItem: [...state.orderItem, action.payload],\n        orderPrice: state.orderPrice + itemPrice.regular_price.value\n      };\n    case OrderActionTypes.REMOVE_FROM_ORDER:\n      return {\n        ...state,\n        orderItem: state.orderItem.filter(item => item.id !== action.payload)\n      };\n    case OrderActionTypes.DECREASE_ORDER_ITEM:\n      console.log(action.payload);\n      const updatedOrderItem = state.orderItem.map(item => {\n        if (item.id === action.payload.id) {\n          return {\n            ...item,\n            quantity: item.quantity - 1\n          };\n        } else {\n          return {\n            ...item\n          };\n        }\n      }).filter(item => item.quantity > 0);\n      console.log(updatedOrderItem);\n      return {\n        ...state,\n        orderItem: updatedOrderItem\n      };\n    case OrderActionTypes.INCREASE_ORDER_ITEM:\n      const increasedOrderItem = state.orderItem.map(item => {\n        if (item.id === action.payload.id) {\n          return {\n            ...item,\n            quantity: item.quantity + 1\n          };\n        } else {\n          return item;\n        }\n      });\n      console.log(increasedOrderItem);\n      return {\n        ...state,\n        orderItem: increasedOrderItem\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};","map":{"version":3,"names":["OrderActionTypes","initialState","orderItem","orderPrice","orderCurrency","orderReducer","state","arguments","length","undefined","action","type","ADD_TO_ORDER","itemPrice","payload","regular_price","value","REMOVE_FROM_ORDER","filter","item","id","DECREASE_ORDER_ITEM","console","log","updatedOrderItem","map","quantity","INCREASE_ORDER_ITEM","increasedOrderItem"],"sources":["/Users/romansehovcev/Documents/TestsProjects/test-project-accent/src/store/reducer/orderReducer.ts"],"sourcesContent":["import { OrderState, OrderActionTypes, OrderActions } from './../../types/order';\n\n\nconst initialState: OrderState = {\n    orderItem: [],\n    orderPrice: 0,\n    orderCurrency: \"USD\",\n}\n\nexport const orderReducer = (state = initialState, action: OrderActions): OrderState => {\n    switch(action.type) {\n        case OrderActionTypes.ADD_TO_ORDER: \n        const itemPrice:any = action.payload\n            return {\n                ...state,\n                orderItem: [...state.orderItem, action.payload],\n                orderPrice: state.orderPrice + itemPrice.regular_price.value\n            }\n              case  OrderActionTypes.REMOVE_FROM_ORDER:\n                \n                return { \n                    ...state, \n                    orderItem: state.orderItem.filter((item) => item.id !== action.payload) \n                };\n              case OrderActionTypes.DECREASE_ORDER_ITEM:\n                console.log(action.payload);\n                \n                const updatedOrderItem = \n                state.orderItem.map((item) => {\n                  if (item.id === action.payload.id) {\n                    return { \n                        ...item, \n                        quantity: item.quantity - 1 \n                    };\n                  } else {\n                    return {\n                        ...item\n                    }\n                  }\n                })\n                .filter((item) => item.quantity > 0);\n                console.log(updatedOrderItem);\n                \n                return { \n                    ...state, \n                    orderItem: updatedOrderItem \n                };\n              case OrderActionTypes.INCREASE_ORDER_ITEM:\n                const increasedOrderItem = state.orderItem.map((item) => {\n                  if (item.id === action.payload.id) {\n                    return { \n                        ...item,\n                         quantity: item.quantity + 1\n                    };\n                  } else {\n                    return item;\n                  }\n                });\n                console.log(increasedOrderItem);\n                \n                return { \n                    ...state, \n                    orderItem: increasedOrderItem \n                };\n\n        default: \n        return {\n            ...state\n        }\n    }\n}"],"mappings":"AAAA,SAAqBA,gBAAgB,QAAsB,qBAAqB;AAGhF,MAAMC,YAAwB,GAAG;EAC7BC,SAAS,EAAE,EAAE;EACbC,UAAU,EAAE,CAAC;EACbC,aAAa,EAAE;AACnB,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,SAAAA,CAAA,EAA4D;EAAA,IAA3DC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,YAAY;EAAA,IAAES,MAAoB,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACnE,QAAOC,MAAM,CAACC,IAAI;IACd,KAAKX,gBAAgB,CAACY,YAAY;MAClC,MAAMC,SAAa,GAAGH,MAAM,CAACI,OAAO;MAChC,OAAO;QACH,GAAGR,KAAK;QACRJ,SAAS,EAAE,CAAC,GAAGI,KAAK,CAACJ,SAAS,EAAEQ,MAAM,CAACI,OAAO,CAAC;QAC/CX,UAAU,EAAEG,KAAK,CAACH,UAAU,GAAGU,SAAS,CAACE,aAAa,CAACC;MAC3D,CAAC;IACC,KAAMhB,gBAAgB,CAACiB,iBAAiB;MAEtC,OAAO;QACH,GAAGX,KAAK;QACRJ,SAAS,EAAEI,KAAK,CAACJ,SAAS,CAACgB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKV,MAAM,CAACI,OAAO;MAC1E,CAAC;IACH,KAAKd,gBAAgB,CAACqB,mBAAmB;MACvCC,OAAO,CAACC,GAAG,CAACb,MAAM,CAACI,OAAO,CAAC;MAE3B,MAAMU,gBAAgB,GACtBlB,KAAK,CAACJ,SAAS,CAACuB,GAAG,CAAEN,IAAI,IAAK;QAC5B,IAAIA,IAAI,CAACC,EAAE,KAAKV,MAAM,CAACI,OAAO,CAACM,EAAE,EAAE;UACjC,OAAO;YACH,GAAGD,IAAI;YACPO,QAAQ,EAAEP,IAAI,CAACO,QAAQ,GAAG;UAC9B,CAAC;QACH,CAAC,MAAM;UACL,OAAO;YACH,GAAGP;UACP,CAAC;QACH;MACF,CAAC,CAAC,CACDD,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACO,QAAQ,GAAG,CAAC,CAAC;MACpCJ,OAAO,CAACC,GAAG,CAACC,gBAAgB,CAAC;MAE7B,OAAO;QACH,GAAGlB,KAAK;QACRJ,SAAS,EAAEsB;MACf,CAAC;IACH,KAAKxB,gBAAgB,CAAC2B,mBAAmB;MACvC,MAAMC,kBAAkB,GAAGtB,KAAK,CAACJ,SAAS,CAACuB,GAAG,CAAEN,IAAI,IAAK;QACvD,IAAIA,IAAI,CAACC,EAAE,KAAKV,MAAM,CAACI,OAAO,CAACM,EAAE,EAAE;UACjC,OAAO;YACH,GAAGD,IAAI;YACNO,QAAQ,EAAEP,IAAI,CAACO,QAAQ,GAAG;UAC/B,CAAC;QACH,CAAC,MAAM;UACL,OAAOP,IAAI;QACb;MACF,CAAC,CAAC;MACFG,OAAO,CAACC,GAAG,CAACK,kBAAkB,CAAC;MAE/B,OAAO;QACH,GAAGtB,KAAK;QACRJ,SAAS,EAAE0B;MACf,CAAC;IAET;MACA,OAAO;QACH,GAAGtB;MACP,CAAC;EAAA;AAET,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}